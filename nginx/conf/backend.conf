server {
    listen 80;
    server_name localhost;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
        # --- nginx 服务器配置 CORS 支持跨域 ---

        # --- OPTIONS请求配置 ---
        # 现代浏览器在发送真正的跨域请求（如 POST, PUT, DELETE 或带有自定义头的 GET）之前，
        # 会先发送一个 "预检" 请求 (preflight request)，使用的是 OPTIONS 方法。
        # 需要正确地响应这个预检请求。
        
        if ($request_method = 'OPTIONS') {

            # 允许的源
            # 在生产环境中，为了安全，替换为你的前端域名
            # add_header 'Access-Control-Allow-Origin' 'https://your-frontend-domain.com';
            # 允许来自任何源的跨域请求
            add_header 'Access-Control-Allow-Origin' '*';

            # 允许的 HTTP 方法
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            
            # 允许的头部
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            # 浏览器缓存预检请求的结果（20天）
            add_header 'Access-Control-Max-Age' 1728000;
            
            return 204;
        }

        # --- 实际请求配置 ---
        # 需要和 OPTIONS 请求配置保持完全一致
        add_header 'Access-Control-Allow-Origin' '*';

         # 允许的 HTTP 方法
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            
        # 允许的头部
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

        # --- 目标服务器 ---
        proxy_pass http://nest-app:3003;
        
        # --- 暴露的原始头部信息 ---
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # --- WebSocket 支持 ---
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # --- 负载均衡配置 ---
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        
        # --- 超时设置 ---
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # --- 缓冲区设置 ---
        proxy_buffer_size 4k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;
    }

    # 增加一些通用的安全响应头
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}