generator client {
  provider      = "prisma-client-js"
  // 提高兼容性
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  //使用自定义路径则需要修改代码中PrismaClient的import路径
  //默认路径:'@prisma/client'
  // output        = "../generated/client"
}

/**
 * generator docs {
 * provider = "node node_modules/prisma-docs-generator"
 * output   = "../generated/docs"
 * }
 */

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//用户
model user {
  id              Int               @id @default(autoincrement())
  username        String            @unique(map: "username") @db.VarChar(50)
  password        String            @db.VarChar(500)
  create_at       DateTime?         @default(now()) @db.Timestamp(0)
  update_at       DateTime?         @default(now()) @db.Timestamp(0)
  email           String            @db.VarChar(100)
  article         article[]
  ai_conversation ai_conversation[]
}

model ai_conversation {
  id        Int       @id @default(autoincrement())
  keyname   String    @db.VarChar(100)
  label     String    @db.VarChar(100)
  content   Json?
  user_id   Int
  create_at DateTime? @default(now()) @db.Timestamp(0)
  update_at DateTime? @default(now()) @db.Timestamp(0)
  user      user      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id], map: "user_id")
}

//面试题
model article {
  id              Int       @id @default(autoincrement())
  link            String    @unique @db.VarChar(500) // 题目链接（去掉query和hash）
  user_id         Int
  create_at       DateTime? @default(now()) @db.Timestamp(0)
  update_at       DateTime? @default(now()) @db.Timestamp(0)
  title           String    @db.LongText
  quiz_type       String    @db.VarChar(255) //题目考察方式（问答题、选择题）
  content         String    @db.LongText
  content_mindmap String?   @db.LongText //用于生成思维导图的精炼后的内容
  user_note       String?   @db.LongText //用户笔记
  gist            String    @db.LongText
  content_type    String    @db.VarChar(255) //题目内容类型（javascript、css）
  hard            String    @db.VarChar(255)
  anki_note_id    BigInt?   @db.BigInt //anki中对应笔记id
  time_create     DateTime? @default(now()) @db.Timestamp(0) //题目创建时间
  time_update     DateTime? @default(now()) @db.Timestamp(0) //题目更新时间
  user            user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "article_ibfk_1")

  @@index([user_id], map: "user_id")
}
