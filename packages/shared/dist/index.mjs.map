{"version":3,"sources":["../src/constant/error.ts","../src/types/login_regist.schema.ts","../src/types/project.ts","../src/types/project.schema.ts","../src/types/project.schema-form.ts","../src/utils/md_json.ts"],"sourcesContent":["export enum ErrorCode {\r\n\tSUCCESS = '0',\r\n\tUNNAMED = '9999',\r\n\t//通用错误\r\n\tVALIDATION_ERROR = '1001',\r\n\tAUTH_ERROR = '1002',\r\n\tFORBIDDEN = '1003',\r\n\tNOT_FOUND = '1004',\r\n\tSERVER_ERROR = '1005',\r\n\t//业务错误\r\n\t//1、注册、登录\r\n\tUSER_NOT_FOUND = '2001',\r\n\tUSER_ALREADY_EXISTS = '2002',\r\n\tUSER_PASSWORD_WRONG = '2003',\r\n\tCAPTCHAEXPIRED = '2004',\r\n\tCAPTCHAWRONG = '2005',\r\n\tUSER_TOKEN_INVALID = '2006',\r\n\tUSER_TOKEN_NOT_CARRY = '2007',\r\n\r\n\t//2、mcp client\r\n\tSERVER_NOT_FOUND = '3001',\r\n\tSERVER_CONNECTION_ERROR = '3002',\r\n\tTOOL_GET_ERROR = '3003',\r\n\tTOOL_CALL_ERROR = '3004',\r\n\r\n\t//3、项目经验\r\n\r\n\t//4、mongodb钩子\r\n\tFORMAT_ERROR = '4001'\r\n}\r\n\r\nexport const errorMessage = {\r\n\t//通用错误\r\n\t[ErrorCode.SUCCESS]: '成功',\r\n\t[ErrorCode.VALIDATION_ERROR]: '参数验证失败',\r\n\t[ErrorCode.AUTH_ERROR]: '未授权',\r\n\t[ErrorCode.FORBIDDEN]: '禁止访问',\r\n\t[ErrorCode.NOT_FOUND]: '资源未找到',\r\n\t[ErrorCode.SERVER_ERROR]: '服务器错误',\r\n\t//业务错误\r\n\t//1、注册、登录\r\n\t[ErrorCode.USER_NOT_FOUND]: '用户不存在',\r\n\t[ErrorCode.USER_ALREADY_EXISTS]: '用户已存在',\r\n\t[ErrorCode.USER_PASSWORD_WRONG]: '密码错误',\r\n\t[ErrorCode.CAPTCHAEXPIRED]: '验证码已过期',\r\n\t[ErrorCode.CAPTCHAWRONG]: '验证码错误',\r\n\t[ErrorCode.USER_TOKEN_INVALID]: '用户token无效',\r\n\t[ErrorCode.USER_TOKEN_NOT_CARRY]: '用户token未携带',\r\n\r\n\t//2、mcp client\r\n\t[ErrorCode.SERVER_NOT_FOUND]: 'MCP server未找到',\r\n\t[ErrorCode.SERVER_CONNECTION_ERROR]: 'MCP server连接失败',\r\n\t[ErrorCode.TOOL_GET_ERROR]: '获取mcp工具失败',\r\n\t[ErrorCode.TOOL_CALL_ERROR]: '调用mcp工具失败',\r\n\t//3、项目经验\r\n\r\n\t//4、mongodb钩子\r\n\t[ErrorCode.FORMAT_ERROR]: '错误的数据格式'\r\n};\r\n","import { z } from 'zod';\r\n\r\nconst loginformSchema = z.object({\r\n\tusername: z.string().min(2, {\r\n\t\tmessage: '用户名至少需要2个字符'\r\n\t}),\r\n\tpassword: z.string().min(6, {\r\n\t\tmessage: '密码至少需要6个字符'\r\n\t})\r\n});\r\n\r\nconst registformSchema = z.object({\r\n\tusername: z.string().min(2, {\r\n\t\tmessage: '用户名至少需要2个字符'\r\n\t}),\r\n\tpassword: z.string().min(6, {\r\n\t\tmessage: '密码至少需要6个字符'\r\n\t}),\r\n\tconfirmPassword: z.string().min(6, {\r\n\t\tmessage: '请再次输入密码'\r\n\t}),\r\n\temail: z.string().email({\r\n\t\tmessage: '请输入正确的邮箱地址'\r\n\t}),\r\n\tcaptcha: z.string().min(6, {\r\n\t\tmessage: '请输入正确的验证码'\r\n\t})\r\n});\r\n\r\ntype LoginFormType = z.infer<typeof loginformSchema>;\r\ntype RegistFormType = z.infer<typeof registformSchema>;\r\n\r\nexport { loginformSchema, registformSchema, type LoginFormType, type RegistFormType };\r\n","import { z } from 'zod';\r\nimport {\r\n\tlookupResultSchema,\r\n\tprojectMinedSchema,\r\n\tprojectPolishedSchema,\r\n\tprojectSchema\r\n} from './project.schema';\r\n\r\nexport enum ProjectStatus {\r\n\trefuse = 'refuse', //信息未完整\r\n\tcommitted = 'committed', //信息完整\r\n\r\n\t/* ProjectPolishedSchema 中只会有此状态的项目描述*/\r\n\tpolishing = 'polishing', //llm已打磨\r\n\r\n\tpolished = 'polished', //用户已合并打磨\r\n\r\n\t/* ProjectMinedSchema 中只会有此状态的项目描述*/\r\n\tmining = 'mining', //llm已挖掘\r\n\r\n\tmined = 'mined', //用户已合并挖掘\r\n\taccepted = 'accepted' //完成\r\n}\r\n\r\nexport type ProjectDto = z.infer<typeof projectSchema>;\r\nexport type ProjectPolishedDto = z.infer<typeof projectPolishedSchema>;\r\nexport type ProjectMinedDto = z.infer<typeof projectMinedSchema>;\r\n\r\nexport interface ProjectVo extends z.infer<typeof projectSchema> {\r\n\tid: string;\r\n\tstatus: ProjectStatus; //项目状态\r\n\tcreatedAt?: string;\r\n\tupdatedAt?: string;\r\n\r\n\t//拷打结果\r\n\tlookupResult: z.infer<typeof lookupResultSchema>;\r\n}\r\n\r\nexport interface ProjectPolishedVo extends z.infer<typeof projectPolishedSchema> {}\r\n\r\nexport interface ProjectMineddVo extends z.infer<typeof projectMinedSchema> {}\r\n","import { z } from 'zod';\r\n\r\nconst infoSchema = z\r\n\t.object({\r\n\t\tname: z.string().min(2).max(100).describe('项目名称'),\r\n\t\tdesc: z.object({\r\n\t\t\trole: z.string().describe('用户在项目中的角色和职责').optional().default(''),\r\n\t\t\tcontribute: z.string().describe('用户的核心贡献和参与程度').optional().default(''),\r\n\t\t\tbgAndTarget: z.string().describe('项目的背景和目的').optional().default('')\r\n\t\t}),\r\n\t\ttechStack: z.array(z.string()).describe('项目的技术栈').default([])\r\n\t})\r\n\t.describe('项目信息的结构化描述');\r\n\r\n/**\r\n * @param item 每个亮点的类型\r\n * @returns\r\n */\r\nexport function getLightspotSchema(item: any = z.string()) {\r\n\treturn z\r\n\t\t.object({\r\n\t\t\tteam: z.array(item).describe('团队贡献方面的亮点').default([]),\r\n\t\t\tskill: z.array(item).describe('技术亮点/难点方面的亮点').default([]),\r\n\t\t\tuser: z.array(item).describe('用户体验/业务价值方面的亮点').default([])\r\n\t\t})\r\n\t\t.describe('项目亮点的结构化描述');\r\n}\r\n\r\nconst projectSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema()\r\n});\r\n\r\nconst projectPolishedSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema(\r\n\t\tz.object({\r\n\t\t\tcontent: z.string().describe('亮点内容'),\r\n\t\t\tadvice: z.string().describe('亮点改进建议').default('NONE')\r\n\t\t})\r\n\t)\r\n});\r\n\r\nconst projectMinedSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema(),\r\n\tlightspotAdded: getLightspotSchema(\r\n\t\tz.object({\r\n\t\t\tcontent: z.string().describe('亮点内容'),\r\n\t\t\treason: z.string().describe('亮点添加原因').default('NONE'),\r\n\t\t\ttech: z.array(z.string()).describe('涉及技术').default([])\r\n\t\t})\r\n\t)\r\n});\r\nconst lookupResultSchema = z.object({\r\n\tproblem: z\r\n\t\t.array(\r\n\t\t\tz.object({\r\n\t\t\t\tname: z.string().describe('问题名称'),\r\n\t\t\t\tdesc: z.string().describe('问题描述')\r\n\t\t\t})\r\n\t\t)\r\n\t\t.describe('存在的问题')\r\n\t\t.default([]),\r\n\tsolution: z\r\n\t\t.array(\r\n\t\t\tz.object({\r\n\t\t\t\tname: z.string().describe('解决方案名称'),\r\n\t\t\t\tdesc: z.string().describe('解决方案描述')\r\n\t\t\t})\r\n\t\t)\r\n\t\t.describe('解决方案')\r\n\t\t.default([]),\r\n\tscore: z.number().describe('项目描述评分, 0-100分').default(0)\r\n});\r\n\r\nexport { lookupResultSchema, projectMinedSchema, projectPolishedSchema, projectSchema };\r\n","import { z } from 'zod';\r\n\r\n/* 将原有的schema的default()和optional()去掉\r\nreact-hook-form的 useForm 会报类型错误\r\n\t疑似是schema对象嵌套导致optional()报错\r\n\t\t本身optional()是可以用的,只是default()不能用\r\n\r\ndefault()通过defaultValues参数平替\r\n\r\noptional()在ts类型中是允许值为undefined\r\n\r\n表单中的非required是允许用户不填写（即允许提交''）\r\nrequired是必须填写的（即不允许提交''）\r\n\t默认即非required, 通过min(1) 实现 required 即可\r\n\t\tinput可以这么处理（值都是字符串）\r\n*/\r\nconst infoSchemaForm = z\r\n\t.object({\r\n\t\tname: z.string().min(2).max(100).describe('项目名称'),\r\n\t\tdesc: z.object({\r\n\t\t\trole: z.string().describe('用户在项目中的角色和职责'),\r\n\t\t\tcontribute: z.string().describe('用户的核心贡献和参与程度'),\r\n\t\t\tbgAndTarget: z.string().describe('项目的背景和目的')\r\n\t\t}),\r\n\t\ttechStack: z.array(z.string()).describe('项目的技术栈')\r\n\t})\r\n\t.describe('项目信息的结构化描述');\r\n\r\nfunction getLightspotSchemaForm(item: any = z.string()) {\r\n\treturn z\r\n\t\t.object({\r\n\t\t\tteam: z.array(item).describe('团队贡献方面的亮点'),\r\n\t\t\tskill: z.array(item).describe('技术亮点/难点方面的亮点'),\r\n\t\t\tuser: z.array(item).describe('用户体验/业务价值方面的亮点')\r\n\t\t})\r\n\t\t.describe('项目亮点的结构化描述');\r\n}\r\nconst projectSchemaForm = z.object({\r\n\tinfo: infoSchemaForm,\r\n\tlightspot: getLightspotSchemaForm()\r\n});\r\n\r\nexport { projectSchemaForm };\r\n","import { z } from 'zod';\r\nimport { projectSchemaForm } from '../types/project.schema-form';\r\n/**\r\n * 将项目的Markdown格式文本转换为符合projectSchemaForm的结构化数据\r\n * @param markdown 项目的Markdown格式文本\r\n * @returns 符合projectSchemaForm的结构化数据\r\n */\r\nexport function markdownToProjectSchema(markdown: string): z.infer<typeof projectSchemaForm> {\r\n\t// 初始化结果对象\r\n\tconst result: z.infer<typeof projectSchemaForm> = {\r\n\t\tinfo: {\r\n\t\t\tname: '',\r\n\t\t\tdesc: {\r\n\t\t\t\trole: '',\r\n\t\t\t\tcontribute: '',\r\n\t\t\t\tbgAndTarget: ''\r\n\t\t\t},\r\n\t\t\ttechStack: []\r\n\t\t},\r\n\t\tlightspot: {\r\n\t\t\tteam: [],\r\n\t\t\tskill: [],\r\n\t\t\tuser: []\r\n\t\t}\r\n\t};\r\n\t//移除所有注释\r\n\tmarkdown = markdown.replace(/^\\s*>\\s*(.+?)$/gm, '');\r\n\r\n\t// 处理项目名称\r\n\tconst nameMatch = markdown.match(/名称：(.+?)(?:\\n|$)/);\r\n\tif (nameMatch && nameMatch[1]) {\r\n\t\tresult.info.name = nameMatch[1].trim();\r\n\t}\r\n\r\n\t// 处理角色和职责\r\n\tconst roleMatch = markdown.match(/角色和职责：(.+?)(?:\\n|$)/);\r\n\tif (roleMatch && roleMatch[1]) {\r\n\t\tresult.info.desc.role = roleMatch[1].trim();\r\n\t}\r\n\r\n\t// 处理核心贡献\r\n\tconst contributeMatch = markdown.match(/核心贡献和参与程度：(.+?)(?:\\n|$)/);\r\n\tif (contributeMatch && contributeMatch[1]) {\r\n\t\tresult.info.desc.contribute = contributeMatch[1].trim();\r\n\t}\r\n\r\n\t// 处理项目背景和目的\r\n\tconst bgMatch = markdown.match(/背景和目的：(.+?)(?:\\n|$)/);\r\n\tif (bgMatch && bgMatch[1]) {\r\n\t\tresult.info.desc.bgAndTarget = bgMatch[1].trim();\r\n\t}\r\n\r\n\t// 处理技术栈\r\n\tconst techStackSection = markdown.match(/#### 1\\.3 项目技术栈\\s*\\n([\\s\\S]*?)(?=\\n###|\\n####|$)/);\r\n\tif (techStackSection && techStackSection[1]) {\r\n\t\tconst techStackText = techStackSection[1].trim();\r\n\t\t// 将逗号、顿号分隔的技术栈转为数组\r\n\t\tresult.info.techStack = techStackText.split(/[、,，\\s]+/).filter(Boolean);\r\n\t}\r\n\r\n\t// 处理团队贡献亮点\r\n\tconst teamSection = markdown.match(/#### 2\\.1 团队贡献\\s*([\\s\\S]*?)(?=\\n####|$)/);\r\n\tif (teamSection && teamSection[1]) {\r\n\t\t//! crepe编辑器中无序列表项 - 会转为 *: 统一用*\r\n\t\t// 提取所有以 \"*\" 或 \" * \" 开头的行\r\n\t\tconst teamPoints = teamSection[1].match(/^\\s*\\*\\s*(.+?)$/gm);\r\n\t\tif (teamPoints) {\r\n\t\t\tresult.lightspot.team = teamPoints.map(point => point.replace(/^\\s*\\*\\s*/, '').trim());\r\n\t\t}\r\n\t}\r\n\r\n\t// 处理技术亮点/难点\r\n\tconst skillSection = markdown.match(/#### 2\\.2 技术亮点\\/难点\\s*([\\s\\S]*?)(?=\\n####|$)/);\r\n\tif (skillSection && skillSection[1]) {\r\n\t\tconst skillPoints = skillSection[1].match(/^\\s*\\*\\s*(.+?)$/gm);\r\n\t\tif (skillPoints) {\r\n\t\t\tresult.lightspot.skill = skillPoints.map(point => point.replace(/^\\s*\\*\\s*/, '').trim());\r\n\t\t}\r\n\t}\r\n\r\n\t// 处理用户体验/业务价值\r\n\tconst userSection = markdown.match(/#### 2\\.3 用户体验\\/业务价值\\s*([\\s\\S]*?)(?=\\n####|$)/);\r\n\tif (userSection && userSection[1]) {\r\n\t\tconst userPoints = userSection[1].match(/^\\s*\\*\\s*(.+?)$/gm);\r\n\t\tif (userPoints) {\r\n\t\t\tresult.lightspot.user = userPoints.map(point => point.replace(/^\\s*\\*\\s*/, '').trim());\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * 将项目schema对象转换回Markdown格式\r\n * @param project 项目结构化数据\r\n * @returns Markdown格式文本\r\n */\r\nexport function projectSchemaToMarkdown(project: z.infer<typeof projectSchemaForm>): string {\r\n\tlet markdown = `### 1、项目信息\\n\\n`;\r\n\r\n\t// 基本信息\r\n\tmarkdown += `#### 1.1 基本信息\\n\\n`;\r\n\tmarkdown += `* 名称：${project.info.name}\\n\\n`;\r\n\r\n\t// 项目介绍\r\n\tmarkdown += `#### 1.2 项目介绍\\n\\n`;\r\n\tmarkdown += `* 角色和职责：${project.info.desc.role}\\n`;\r\n\tmarkdown += `* 核心贡献和参与程度：${project.info.desc.contribute}\\n`;\r\n\tmarkdown += `* 背景和目的：${project.info.desc.bgAndTarget}\\n\\n`;\r\n\r\n\t// 技术栈\r\n\tmarkdown += `#### 1.3 项目技术栈\\n\\n`;\r\n\tmarkdown += `${project.info.techStack.join('、')}\\n\\n`;\r\n\r\n\t// 亮点\r\n\tmarkdown += `### 2、亮点\\n\\n`;\r\n\r\n\t// 团队贡献\r\n\tmarkdown += `#### 2.1 团队贡献\\n`;\r\n\tproject.lightspot.team.forEach(item => {\r\n\t\tmarkdown += `  * ${item}\\n`;\r\n\t});\r\n\r\n\t// 技术亮点\r\n\tmarkdown += `#### 2.2 技术亮点/难点\\n`;\r\n\tproject.lightspot.skill.forEach(item => {\r\n\t\tmarkdown += `  * ${item}\\n`;\r\n\t});\r\n\r\n\t// 用户体验\r\n\tmarkdown += `#### 2.3 用户体验/业务价值\\n`;\r\n\tproject.lightspot.user.forEach(item => {\r\n\t\tmarkdown += `  * ${item}\\n`;\r\n\t});\r\n\r\n\treturn markdown;\r\n}\r\n"],"mappings":"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","names":["ErrorCode","ProjectStatus","z","z"]}