{"version":3,"sources":["../src/index.ts","../src/constant/error.ts","../src/types/login_regist.schema.ts","../src/types/project.schema.ts"],"sourcesContent":["export { ErrorCode, errorMessage } from './constant/error';\r\nexport { type LoginResponse, type RegistResponse } from './types/login_regist';\r\nexport {\r\n\tloginformSchema,\r\n\tregistformSchema,\r\n\ttype LoginFormType,\r\n\ttype RegistFormType\r\n} from './types/login_regist.schema';\r\nexport { type UserInfoFromToken, type VerifyMetaData } from './types/loginVerify';\r\nexport {\r\n\tprojectMinedSchema,\r\n\tprojectPolishedSchema,\r\n\tprojectSchema,\r\n\ttype ProjectExperience,\r\n\ttype ProjectExperienceMined,\r\n\ttype ProjectExperiencePolished\r\n} from './types/project.schema';\r\nexport { type ServerDataFormat } from './types/serverDataFormat';\r\nexport {\r\n\tDataChunk,\r\n\tLLMSessionRequest,\r\n\tLLMSessionResponse,\r\n\tLLMSessionStatusResponse\r\n} from './types/sse';\r\n","export enum ErrorCode {\r\n\tSUCCESS = '0',\r\n\tUNNAMED = '9999',\r\n\t//通用错误\r\n\tVALIDATION_ERROR = '1001',\r\n\tAUTH_ERROR = '1002',\r\n\tFORBIDDEN = '1003',\r\n\tNOT_FOUND = '1004',\r\n\tSERVER_ERROR = '1005',\r\n\t//业务错误\r\n\t//1、注册、登录\r\n\tUSER_NOT_FOUND = '2001',\r\n\tUSER_ALREADY_EXISTS = '2002',\r\n\tUSER_PASSWORD_WRONG = '2003',\r\n\tCAPTCHAEXPIRED = '2004',\r\n\tCAPTCHAWRONG = '2005',\r\n\tUSER_TOKEN_INVALID = '2006',\r\n\tUSER_TOKEN_NOT_CARRY = '2007',\r\n\r\n\t//2、mcp client\r\n\tSERVER_NOT_FOUND = '3001',\r\n\tSERVER_CONNECTION_ERROR = '3002',\r\n\tTOOL_GET_ERROR = '3003',\r\n\tTOOL_CALL_ERROR = '3004'\r\n}\r\n\r\nexport const errorMessage = {\r\n\t//通用错误\r\n\t[ErrorCode.SUCCESS]: '成功',\r\n\t[ErrorCode.VALIDATION_ERROR]: '参数验证失败',\r\n\t[ErrorCode.AUTH_ERROR]: '未授权',\r\n\t[ErrorCode.FORBIDDEN]: '禁止访问',\r\n\t[ErrorCode.NOT_FOUND]: '资源未找到',\r\n\t[ErrorCode.SERVER_ERROR]: '服务器错误',\r\n\t//业务错误\r\n\t//1、注册、登录\r\n\t[ErrorCode.USER_NOT_FOUND]: '用户不存在',\r\n\t[ErrorCode.USER_ALREADY_EXISTS]: '用户已存在',\r\n\t[ErrorCode.USER_PASSWORD_WRONG]: '密码错误',\r\n\t[ErrorCode.CAPTCHAEXPIRED]: '验证码已过期',\r\n\t[ErrorCode.CAPTCHAWRONG]: '验证码错误',\r\n\t[ErrorCode.USER_TOKEN_INVALID]: '用户token无效',\r\n\t[ErrorCode.USER_TOKEN_NOT_CARRY]: '用户token未携带',\r\n\r\n\t//2、mcp client\r\n\t[ErrorCode.SERVER_NOT_FOUND]: 'MCP server未找到',\r\n\t[ErrorCode.SERVER_CONNECTION_ERROR]: 'MCP server连接失败',\r\n\t[ErrorCode.TOOL_GET_ERROR]: '获取mcp工具失败',\r\n\t[ErrorCode.TOOL_CALL_ERROR]: '调用mcp工具失败'\r\n};\r\n","import { z } from 'zod';\r\n\r\nconst loginformSchema = z.object({\r\n\tusername: z.string().min(2, {\r\n\t\tmessage: '用户名至少需要2个字符'\r\n\t}),\r\n\tpassword: z.string().min(6, {\r\n\t\tmessage: '密码至少需要6个字符'\r\n\t})\r\n});\r\n\r\nconst registformSchema = z.object({\r\n\tusername: z.string().min(2, {\r\n\t\tmessage: '用户名至少需要2个字符'\r\n\t}),\r\n\tpassword: z.string().min(6, {\r\n\t\tmessage: '密码至少需要6个字符'\r\n\t}),\r\n\tconfirmPassword: z.string().min(6, {\r\n\t\tmessage: '请再次输入密码'\r\n\t}),\r\n\temail: z.string().email({\r\n\t\tmessage: '请输入正确的邮箱地址'\r\n\t}),\r\n\tcaptcha: z.string().min(6, {\r\n\t\tmessage: '请输入正确的验证码'\r\n\t})\r\n});\r\n\r\ntype LoginFormType = z.infer<typeof loginformSchema>;\r\ntype RegistFormType = z.infer<typeof registformSchema>;\r\n\r\nexport { loginformSchema, registformSchema, type LoginFormType, type RegistFormType };\r\n","import { z } from 'zod';\r\n\r\nconst infoSchema = z\r\n\t.object({\r\n\t\tname: z.string().min(2).max(100).describe('项目名称'),\r\n\t\tdesc: z.object({\r\n\t\t\trole: z.string().optional().describe('用户在项目中的角色和职责'),\r\n\t\t\tcontribute: z.string().optional().describe('用户的核心贡献和参与程度'),\r\n\t\t\tbgAndTarget: z.string().optional().describe('项目的背景和目的')\r\n\t\t}),\r\n\t\ttechStack: z.array(z.string()).optional().default([]).describe('项目的技术栈')\r\n\t})\r\n\t.describe('项目信息的结构化描述');\r\n\r\n/**\r\n * @param item 每个亮点的类型\r\n * @returns\r\n */\r\nfunction getLightspotSchema(item: any = z.string()) {\r\n\treturn z\r\n\t\t.object({\r\n\t\t\tteam: z.array(item).default([]).describe('团队贡献方面的亮点'),\r\n\t\t\tskill: z.array(item).default([]).describe('技术亮点/难点方面的亮点'),\r\n\t\t\tuser: z.array(item).default([]).describe('用户体验/业务价值方面的亮点')\r\n\t\t})\r\n\t\t.describe('项目亮点的结构化描述');\r\n}\r\n\r\nconst projectSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema()\r\n});\r\n\r\nconst projectPolishedSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema(\r\n\t\tz.object({\r\n\t\t\tcontent: z.string().describe('亮点内容'),\r\n\t\t\tadvice: z.string().default('NONE').describe('亮点改进建议')\r\n\t\t})\r\n\t)\r\n});\r\n\r\nconst projectMinedSchema = z.object({\r\n\tinfo: infoSchema,\r\n\tlightspot: getLightspotSchema(),\r\n\tlightspotAdded: getLightspotSchema(\r\n\t\tz.object({\r\n\t\t\tcontent: z.string().describe('亮点内容'),\r\n\t\t\treason: z.string().default('NONE').describe('亮点添加原因'),\r\n\t\t\ttech: z.array(z.string()).default([]).describe('涉及技术')\r\n\t\t})\r\n\t)\r\n});\r\n\r\n//从zod的schema获取类型定义\r\ntype ProjectExperience = z.infer<typeof projectSchema>;\r\ntype ProjectExperiencePolished = z.infer<typeof projectPolishedSchema>;\r\ntype ProjectExperienceMined = z.infer<typeof projectMinedSchema>;\r\n\r\nexport {\r\n\tprojectMinedSchema,\r\n\tprojectPolishedSchema,\r\n\tprojectSchema,\r\n\ttype ProjectExperience,\r\n\ttype ProjectExperienceMined,\r\n\ttype ProjectExperiencePolished\r\n};\r\n"],"mappings":"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","names":["ErrorCode","import_zod"]}