#!/bin/bash

# deepwiki-to-md
# DeepWikiのコンテンツをMarkdown形式で取得するためのラッパースクリプト

# スクリプト配置ディレクトリ配下に結果を出力
readonly wk_dir_script="$(dirname $0)"
readonly dir_script="$(cd ${wk_dir_script}; pwd)"
cd "${dir_script}" || exit 1


# デフォルト設定
IMAGE_NAME="suwash/deepwiki-to-md:latest"
OUTPUT_DIR="$(pwd)"

# ヘルプメッセージ
show_help() {
  echo "使用方法: $0 <サブコマンド> <URL> [オプション]"
  echo ""
  echo "サブコマンド:"
  echo "  chat <URL>     DeepWikiのチャットページをMarkdownに変換"
  echo "  wiki <URL>     DeepWikiのWikiページをMarkdownに変換"
  echo ""
  echo "オプション:"
  echo "  -o, --output <ディレクトリ>  出力先ディレクトリを指定（デフォルト: カレントディレクトリ）"
  echo "  -h, --help                   このヘルプメッセージを表示"
  echo ""
  echo "例:"
  echo "  $0 chat https://deepwiki.com/search/c4_a06e7db5-c0b8-4899-a80a-84cf8f36347d"
  echo "  $0 wiki https://deepwiki.com/langchain-ai/langchain -o ./output"
  exit 1
}

# 引数が不足している場合はヘルプを表示
if [ $# -lt 2 ]; then
  show_help
fi

# サブコマンドを取得
SUBCOMMAND=$1
shift

# URLを取得
URL=$1
shift

# オプションを解析
while [ $# -gt 0 ]; do
  case "$1" in
    -o|--output)
      OUTPUT_DIR="$2"
      shift 2
      ;;
    -h|--help)
      show_help
      ;;
    *)
      echo "エラー: 不明なオプション '$1'"
      show_help
      ;;
  esac
done

# 出力ディレクトリが存在しない場合は作成
mkdir -p "$OUTPUT_DIR"

# Dockerコマンドを実行
echo "DeepWikiコンテンツを取得中..."
echo "URL: $URL"
echo "出力先: $OUTPUT_DIR"

docker run --rm \
  -v "$OUTPUT_DIR:/output" \
  "$IMAGE_NAME" \
  "$SUBCOMMAND" "$URL" -o /output

# 実行結果を確認
if [ $? -eq 0 ]; then
  echo "変換が完了しました。出力先: $OUTPUT_DIR"
else
  echo "エラーが発生しました。"
  exit 1
fi
